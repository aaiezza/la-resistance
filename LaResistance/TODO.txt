1)  Track users that are online better

( http://www.codercorp.com/blog/spring/security-spring/tracking-logged-in-users-using-spring-security-httpsessionlistener-in-java-web-application.html )

The UserTracker is just what it says it is and tracks the users that are online.

This is done by using the org.resistance.site.web.TrackingUsernamePasswordAuthenticationFilter.

This extends the UsernamePasswordAuthenticationFilter that gets auto configured
by spring security.

2)  Write our own JdbcUserDetailsManager to communicate with the User Database
correctly and to include all user items

( http://www.codercorp.com/blog/spring/security-spring/writing-custom-userdetailsservice-for-spring-security.html )

This url is kind-of what we're looking for except the UserDetailsService class
is actually going to be the JdbcUserDetailsManager